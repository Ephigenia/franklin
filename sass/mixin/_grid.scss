$grid-columns: 16 !default;
$grid-column-width: 30px !default;
$grid-gutter: 20px !default;

$grid-background-column-width: $grid-column-width;
$grid-background-gutter-width: $grid-gutter;
$grid-background-total-columns: $grid-columns;

@mixin container() {
	display: table;
	margin: 0 auto;
	width: ($grid-column-width + $grid-gutter) * $grid-columns - $grid-gutter;
}
@mixin row() {
	@include clearfix();
	margin-left: -$grid-gutter;
}
@mixin last() {
	margin-right: 0;
}
@mixin offset($n) {
	margin-left: $grid-column-width * $n + $grid-gutter * $n !important;
}
@mixin column($n, $last: false) {
	float: left;
	margin-left: $grid-gutter;
	@include trailer(1);
	@if $last {
		width: $grid-column-width * $n + $grid-gutter * $n;
		@include last;
	} @else {
		width: $grid-column-width * $n + $grid-gutter * ($n - 1);
	}
}
@mixin establish-grid() {
	// standard grid- classes for use in grid
	.grid-container {
		@include container();
	}
	.grid-row {
		@include row();
	}
	@for $i from 1 through $grid-columns {
		.grid-#{$i} {
			@include column($i);
		}
		.grid-offset-#{$i} {
			@include offset($i);
		}
	}
}